version: 3.0.0

services:
  database:
    image: database
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: retro-games
    volumes:
      - ./volumes/database:/var/lib/mysql
    networks:
      - gamenetwork

  proxy:
    image: proxy
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - gamenetwork
    depends_on:
      - api1
      - api2
      - api3

  email1:
    image: trademailer
    build:
      context: ./trademailer
      dockerfile: Dockerfile
    networks:
      - gamenetwork
    depends_on:
      - kafka

  api1:
    image: gametrader
    build:
      context: ./gametrader
      dockerfile: Dockerfile
    networks:
      - gamenetwork
    depends_on:
      - database
  api2:
    image: gametrader
    build:
      context: ./gametrader
      dockerfile: Dockerfile
    networks:
      - gamenetwork
    depends_on:
      - database
  api3:
    image: gametrader
    build:
      context: ./gametrader
      dockerfile: Dockerfile
    networks:
      - gamenetwork
    depends_on:
      - database

  kafka:
    image: bitnami/kafka:3.3
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - gamenetwork

  kafka-exporter:
    image: bitnami/kafka-exporter:latest
    command: [ "--kafka.server=kafka:9092", "--kafka.version=3.3.0" ]
    restart: always
    depends_on:
      - kafka
    networks:
      - gamenetwork

  prometheus:
    image: bitnami/prometheus:latest
    depends_on:
      - kafka-exporter
      - api1
      - api2
      - api3
    volumes:
      - ./volumes/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - gamenetwork

  grafana:
    image: grafana/grafana:latest
    user: '0'
    ports:
      - "3000:3000"
    volumes:
      - ./volumes/grafana:/var/lib/grafana
    networks:
      - gamenetwork

networks:
  gamenetwork:
    driver: bridge
